//updating the data of the nodes

/********************************
    class Node
    {
    public:
        int data;
        Node *next;
        Node(int data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

********************************/

Node* sortList(Node *head)
{
    // Write your code here.
	int count0 = 0, count1 = 0, count2 = 0;
	Node* temp = head;
	while(temp!= nullptr){
		if(temp->data == 0){
			count0++;
		}
		else if(temp->data == 1){
			count1++;
		}
		else{
			count2++;
		}
		temp = temp->next;
	}
// 	cout<<count0<<" "<<count1<<" "<<count2<<"\n";
	temp = head;
	while(count0--){
		temp->data = 0;
		temp=temp->next;
	}
	while(count1--){
		temp->data = 1;
		temp=temp->next;
	}
	while(count2--){
		temp->data = 2;
		temp=temp->next;
	}
	return head;
}

//by changing links of nodes

/********************************
    class Node
    {
    public:
        int data;
        Node *next;
        Node(int data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

********************************/

Node* sortList(Node *head)
{
  
	int count0 = 0, count1 = 0, count2 = 0;
	Node* temp = head;
	Node* dummyzero = new Node(0);
	Node* dummyone = new Node(0);
	Node* dummytwo = new Node(0);
	Node* zero = dummyzero;
	Node* one = dummyone;
	Node* two = dummytwo;
	while(temp!= nullptr){
		if(temp->data == 0){
			Node* tempzero = new Node(0);
			zero->next = tempzero;
			zero=zero->next;
		}
		else if(temp->data == 1){
			Node* tempone = new Node(1);
			one->next = tempone;
			one=one->next;
		}
		else if(temp->data == 2){
			Node* temptwo = new Node(2);
			two->next = temptwo;
			two=two->next;
		}
		temp=temp->next;
		
		
	}
		zero->next = dummyone->next;
		one->next = dummytwo->next;
		return dummyzero->next;
	

}

