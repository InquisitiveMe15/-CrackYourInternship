/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode *curr = head;
        ListNode *prev = NULL;
        
        if(curr == NULL || curr->next == NULL){
            return head;
        }
        
        while(curr != NULL ){          
            if(curr != NULL && curr->next != NULL && curr->val == curr->next->val ){
                while(curr->next != NULL && curr->val == curr->next->val){
                    curr = curr->next;
                }
                
                if(prev == NULL){
                    head = curr->next;
                }else{
                    prev->next = curr->next;
                }
            }else{
                prev = curr;
            }
            
            curr = curr->next;
        }
        
        return head;
    }
};
